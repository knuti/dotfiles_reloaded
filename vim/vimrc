let mapleader = "\<Space>"

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" >> Plugin management
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

call plug#begin()
  " colorschem
  Plug 'sheerun/vim-wombat-scheme'

  " status bar
  Plug 'itchyny/lightline.vim'

  " plug the_silver-searcher to vim
  Plug 'rking/ag.vim'

  " plug fzf to vim
  if (executable('fzf'))
    Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --bin' }
    Plug 'junegunn/fzf.vim'
  endif


  " file navigation tree
  Plug 'scrooloose/nerdtree', { 'on':  'NERDTreeToggle' }
  Plug 'Xuyuanp/nerdtree-git-plugin', { 'on':  'NERDTreeToggle' }

  " 'editorconfig/editorconfig-vim'

  Plug 'tpope/vim-commentary' " easy comment out stuff (gc[c])
  Plug 'tpope/vim-fugitive'   " git wrapper
  Plug 'tpope/vim-endwise'    " put an end to things

call plug#end()

" lightline
set laststatus=2
set noshowmode
let g:lightline = { 'colorscheme': 'wombat' }

" FZF
set rtp+=/usr/local/opt/fzf
map <leader>o :FZF<CR>
let $FZF_DEFAULT_COMMAND = 'ag -g ""'

" " prettier
" let g:prettier#quickfix_enabled = 0
" autocmd BufWrite,FileWritePre,BufWritePre *.js,*.jsx,*.ts,*.css,*.scss Prettier

" NERDTree
let g:NERDTreeIndicatorMapCustom = {
    \ "Modified"  : "✹",
    \ "Staged"    : "✚",
    \ "Untracked" : "✭",
    \ "Renamed"   : "➜",
    \ "Unmerged"  : "═",
    \ "Deleted"   : "✖",
    \ "Dirty"     : "✗",
    \ "Clean"     : "✔︎",
    \ "Unknown"   : "?"
    \ }

nnoremap <leader>n :NERDTreeToggle<CR>
" Enable NERDTree to display hidden files
let NERDTreeShowHidden=1

" " ycm - disable the preview window
" set completeopt-=preview
" " g:ycm_add_preview_to_completeopt
" " let g:ycm_autoclose_preview_window_after_completion = 0
" " let g:ycm_autoclose_preview_window_after_insertion = 0
" let g:ycm_auto_hover = 'GetDoc'
" " nmap <leader>D <plug>(noYCMHover)



"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" >> General Settings
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

set history=1000          " Sets how many lines of history VIM has to remember
filetype plugin indent on " Enable filetype plugins
syntax enable
set autoread              " Set to auto read when a file is changed from the outside
set so=5          " scrolloff -- how many lines to show above/underneath cursor
" set ruler

" Show the line numbers on a files side
set number
set relativenumber
map <leader>non :set number!<cr>:set relativenumber!<cr>

" fast save
nmap <leader>w :w!<cr>

" save with admin privileges
command W w !sudo tee % > /dev/null

" necessary for mappings to work
set nocompatible

" fast edit and source vim configuration
nnoremap <leader>ev :e ~/.vimrc<CR>
nnoremap <leader>vs :so ~/.vimrc<CR>

" Configure backspace so it acts as it should act
set backspace=eol,start,indent
set whichwrap+=<,>,h,l

" Ignore case when searching
set ignorecase

" When searching try to be smart about cases
set smartcase

" Highlight search results
set hlsearch

" For regular expressions turn magic on
set magic

" No annoying sound (errobell/eb) on errors
set noerrorbells
" No flashing screen on error or instead of beep (visualbell/vb)
set novisualbell
" Clearing error notifications
set t_vb=
set tm=500

" toggle paste mode for external sources
map <leader>pp :setlocal paste!<cr>

" Easy close files
map <leader>c <C-w>c

nnoremap <leader>z zfap


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Moving around, tabs, windows and buffers
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Smart way to move between windows
map <leader>h <C-w>h
map <leader>j <C-w>j
map <leader>k <C-w>k
map <leader>l <C-w>l

" Manage Buffer
map <leader>bn :bnext<cr>
map <leader>bp :bprevious<cr>

" Useful mappings for managing tabs
map <leader>t :tabnew<cr>
map <leader>tn :tabnext<CR>
map <leader>tp :tabprevious<CR>

" Disable arrow keys
noremap <Up> <Nop>
noremap <Down> <Nop>
noremap <Left> <Nop>
noremap <Right> <Nop>

inoremap <Up> <Nop>
inoremap <Down> <Nop>
inoremap <Left> <Nop>
inoremap <Right> <Nop>


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Files, backups and undo
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Turn backup off, since most stuff is in SVN, git et.c anyway...
set nobackup
set nowb
set noswapfile

if (executable('ag'))
  " Open Ag and put the cursor in the right position
  map <leader>a :Ag<Space>
  let g:ag_prg="ag --nogroup --column"
endif

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Colors and Fonts
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

colorscheme wombat
set guifont=Monaco:h15
set encoding=utf8
set ffs=unix,dos,mac

noremap <leader>rt :!ctags -f tags --extra=+f --fields=+l --exclude=tmp --exclude=log --exclude=node_modules --exclude=vendor --exclude=artefacts -R *<CR><CR>

